apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-testing-api
  labels:
    app: ai-agent-testing-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-agent-testing-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-agent-testing-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/api/v1/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: api
        image: yourusername/ai-agent-testing:latest
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-agent-testing-secrets
              key: database-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ai-agent-testing-secrets
              key: secret-key
        - name: API_USERNAME
          valueFrom:
            secretKeyRef:
              name: ai-agent-testing-secrets
              key: api-username
        - name: API_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-agent-testing-secrets
              key: api-password
        - name: LOG_LEVEL
          value: "INFO"
        - name: LOG_FORMAT
          value: "json"
        - name: MAX_CONCURRENT_JOBS
          value: "20"
        - name: RATE_LIMIT_PER_MINUTE
          value: "60"
        - name: ENVIRONMENT
          value: "production"
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-testing-api
  labels:
    app: ai-agent-testing-api
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: ai-agent-testing-api
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-agent-testing-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  tls:
  - hosts:
    - api.example.com
    secretName: ai-agent-testing-tls
  rules:
  - host: api.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-agent-testing-api
            port:
              number: 80